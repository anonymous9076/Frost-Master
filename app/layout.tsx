import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import dynamic from "next/dynamic";
const ReactQueryProvider = dynamic(
  () => import("./utlis/provider/ReactQueryProvider")
);
const UserAuthContextProvider = dynamic(
  () => import("./context/UserAuthContextProvider")
);
import { ToastContainer } from "react-toastify";
const Providers = dynamic(() => import("@/components/providers"));

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <UserAuthContextProvider>
        <ReactQueryProvider>
          <body
            className={`${geistSans.variable} ${geistMono.variable} antialiased`}
          >
            <Providers>
              <ToastContainer />

              {children}
            </Providers>
          </body>
        </ReactQueryProvider>
      </UserAuthContextProvider>
    </html>
  );
}
